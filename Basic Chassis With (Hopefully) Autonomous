#pragma config(I2C_Usage, I2C1, i2cSensors)
#pragma config(Sensor, dgtl1,  rightEncoder,   sensorQuadEncoder)
#pragma config(Sensor, dgtl3,  leftEncoder,    sensorQuadEncoder)
#pragma config(Sensor, I2C_1,  backrightMotor, sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Sensor, I2C_2,  backleftMotor,  sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Motor,  port2,           frontrightMotor, tmotorVex393, openLoop)
#pragma config(Motor,  port3,           frontleftMotor, tmotorVex393, openLoop)
#pragma config(Motor,  port4,           backrightMotor, tmotorVex393, openLoop, reversed, encoder, encoderPort, I2C_1, 1000)
#pragma config(Motor,  port5,           backleftMotor, tmotorVex393, openLoop, encoder, encoderPort, I2C_2, 1000)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*----------------------------------------------------------------------------------------------------*\
|*                                       - Multitasking Demo -                                        *|
|*                                      ROBOTC on VEX 2.0 CORTEX                                      *|
|*                                                                                                    *|
|*  This program uses tasks to display to messages to the VEX LCD screen.                             *|
|*                                                                                                    *|
|*                                        ROBOT CONFIGURATION                                         *|
|*    NOTES:                                                                                          *|
|*    1)  You will need to have a VEX LCD attached to UART Port 2 for this program to work.           *|
|*                                                                                                    *|
|*    MOTORS & SENSORS:                                                                               *|
|*    [I/O Port]          [Name]              [Type]                [Description]                     *|
|*    UART - Port 2       -                   VEX LCD               VEX LCD screen                    *|
\*-----------------------------------------------------------------------------------------------4246-*/


//============================================| TASK ONE |============================================
task One()
{
  SensorValue[backrightMotor] = 0;
  SensorValue[backleftMotor] = 0;

  if (SensorValue[backrightMotor] < 1800)  // While less than 5 rotations on the leftEncoder...
  {
    //...Move Forward
    motor[frontrightMotor] = 63;
    motor[frontleftMotor] = 63;
    motor[backrightMotor] = 63;
    motor[backleftMotor] = 63;
  }
  else if(SensorValue[backrightMotor] > 1800)
  {
  	motor[frontrightMotor] = 0;
    motor[frontleftMotor] = 0;
    motor[backrightMotor] = 0;
    motor[backleftMotor] = 0;
	}
}
//====================================================================================================

//============================================| TASK TWO |============================================
task Two()
{
    while(1 == 1)
  {
    //Right side of the robot is controlled by the right joystick, Y-axis
    motor[frontrightMotor] = vexRT[Ch2];
    motor[backrightMotor]  = vexRT[Ch2];
    //Left side of the robot is controlled by the left joystick, Y-axis
    motor[frontleftMotor] = vexRT[Ch3];
    motor[backleftMotor]  = vexRT[Ch3];
  }
}
//====================================================================================================

//+++++++++++++++++++++++++++++++++++++++++++++| MAIN |+++++++++++++++++++++++++++++++++++++++++++++++
task main()
{
  StartTask(One);   
  StartTask(Two);   
  while(true)
  {}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
